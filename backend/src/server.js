import app from './app.js';
import { connectDatabase } from './config/database.js';
import { appConfig } from './config/config.js';
import dotenv from 'dotenv';

dotenv.config(); // Asegura que las variables de entorno est√°n cargadas

/**
 * üö® INSTRUCCI√ìN CR√çTICA PARA RAILWAY üö®
 * * Basado en tus logs anteriores, tu servidor S√ìLO est√° escuchando en el puerto 8080.
 * Para solucionar el error 502, ve al panel de variables de entorno de tu servicio 
 * en Railway y agrega la siguiente variable:
 * * CLAVE: PORT
 * VALOR: 8080
 * * Esto forzar√° a Railway a usar el puerto que tu aplicaci√≥n est√° usando.
 */

// ‚úÖ Usa el puerto asignado por Railway o el de appConfig
// Nota: Usar appConfig.port como fallback fue removido para forzar la depuraci√≥n,
// si esto no funciona, significa que la variable PORT est√° siendo forzada a 8080.
const PORT = process.env.PORT || 5000; 

// ‚úÖ Ruta de verificaci√≥n (para Railway Health Check)
app.get('/health', (req, res) => {
    res.status(200).json({
        status: 'ok',
        environment: process.env.NODE_ENV || 'development',
        port: PORT,
        database: process.env.MYSQLDATABASE || 'undefined',
        timestamp: new Date().toISOString(),
    });
});

const startServer = () => {
    try {
        // 1Ô∏è‚É£ Iniciar el servidor Express INMEDIATAMENTE.
        app.listen(PORT, '0.0.0.0', () => {
            console.log('\n======================================================');
            console.log(`‚úÖ Servidor Express en modo: ${appConfig.nodeEnv || 'development'}`);
            console.log(`üì° Escuchando en el puerto: ${PORT}`);
            // Removida la l√≠nea de log conflictiva.
            console.log('======================================================\n');
            
            // 2Ô∏è‚É£ Conectar a la Base de Datos DESPU√âS de que el servidor est√© escuchando.
            console.log('üöÄ Intentando conectar a MySQL (proceso en segundo plano)...');
            
            // Nota: Aqu√≠ se est√° ejecutando dos veces la conexi√≥n a MySQL en tu log anterior. 
            // Esto podr√≠a ser causado por la doble ejecuci√≥n del script. 
            // Esta estructura es correcta si solo se ejecuta una vez.
            connectDatabase()
                .then(() => {
                    console.log('‚úÖ Conexi√≥n a MySQL establecida correctamente');
                    console.log(`üìä Base de datos: ${process.env.MYSQLDATABASE || 'mysql'} (mysql)`);
                })
                .catch(error => {
                    console.error('\n‚ùå Error en la conexi√≥n a la Base de Datos:', error.message);
                });
        });
    } catch (error) {
        console.error('\n‚ùå Error fatal al iniciar el servidor Express:', error.message);
        process.exit(1);
    }
};

// üöÄ Ejecutar la funci√≥n de inicio
startServer();

// NOTA: Si el error 502 persiste, la causa es que el comando de inicio (npm start) 
// est√° ejecutando el archivo 'server.js' DOS VECES, o existe un archivo de build antiguo.
// La √∫nica soluci√≥n en el c√≥digo es la instrucci√≥n de Railway arriba.